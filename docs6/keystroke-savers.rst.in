Keystroke-savers
================

Short format specifiers
^^^^^^^^^^^^^^^^^^^^^^^

In our examples so far we've often made use of ``mlr --icsv --opprint`` or ``mlr --icsv --ojson``. These are such frequently occurring patterns that they have short options like **--c2p** and **--c2j**:

POKI_RUN_COMMAND
mlr --c2p head -n 2 example.csv
POKI_EOF

POKI_RUN_COMMAND
mlr --c2j head -n 2 example.csv
POKI_EOF

You can get the full list here (TODO:linkify).

File names up front
^^^^^^^^^^^^^^^^^^^

Already we saw that you can put the filename first using ``--from``. When you're interacting with your data at the command line, this makes it easier to up-arrow and append to the previous command:

POKI_RUN_COMMAND
mlr --c2p --from example.csv sort -nr index then head -n 3
POKI_EOF

POKI_RUN_COMMAND
mlr --c2p --from example.csv sort -nr index then head -n 3 then cut -f shape,quantity
POKI_EOF

If there's more than one input file, you can use ``--mfrom``, then however many file names, then ``--`` to indicate the end of your input-file-name list:

POKI_SHOW_COMMAND{{mlr --c2p --mfrom data/*.csv -- sort -n index}}HERE

.mlrrc file
^^^^^^^^^^^

If you want the default file format for Miller to be CSV you can simply put ``--csv`` on a line by itself in your ``~/.mlrrc`` file. Then instead of ``mlr --csv cat example.csv`` you can just do ``mlr cat example.csv``. This is just the default, though, so ``mlr --opprint cat example.csv`` will still use default CSV format for input, and PPRINT (tabular) for output.

You can read more about this at the :doc:`customization` page.
